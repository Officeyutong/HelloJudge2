"""增加外键Update约束条件

Revision ID: 003f4c60ac73
Revises: b45814c1fca7
Create Date: 2021-11-15 18:11:27.047608

"""
import ormtypes
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '003f4c60ac73'
down_revision = 'b45814c1fca7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('cached_accepted_problems_ibfk_2', 'cached_accepted_problems', type_='foreignkey')
    op.drop_constraint('cached_accepted_problems_ibfk_1', 'cached_accepted_problems', type_='foreignkey')
    op.create_foreign_key(None, 'cached_accepted_problems', 'problem', ['problem_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'cached_accepted_problems', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('challenge_record_ibfk_1', 'challenge_record', type_='foreignkey')
    op.drop_constraint('challenge_record_ibfk_3', 'challenge_record', type_='foreignkey')
    op.drop_constraint('challenge_record_ibfk_2', 'challenge_record', type_='foreignkey')
    op.create_foreign_key(None, 'challenge_record', 'problem_set', ['problemset_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'challenge_record', 'challenge', ['challenge_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'challenge_record', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('comment_ibfk_1', 'comment', type_='foreignkey')
    op.drop_constraint('comment_ibfk_2', 'comment', type_='foreignkey')
    op.create_foreign_key(None, 'comment', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'comment', 'discussion', ['discussion_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('contest_ibfk_1', 'contest', type_='foreignkey')
    op.create_foreign_key(None, 'contest', 'user', ['owner_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('contest_clarification_ibfk_1', 'contest_clarification', type_='foreignkey')
    op.drop_constraint('contest_clarification_ibfk_2', 'contest_clarification', type_='foreignkey')
    op.drop_constraint('contest_clarification_ibfk_3', 'contest_clarification', type_='foreignkey')
    op.create_foreign_key(None, 'contest_clarification', 'user', ['replier'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'contest_clarification', 'contest', ['contest'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'contest_clarification', 'user', ['sender'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('discussion_ibfk_1', 'discussion', type_='foreignkey')
    op.create_foreign_key(None, 'discussion', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('feed_ibfk_1', 'feed', type_='foreignkey')
    op.create_foreign_key(None, 'feed', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('follower_ibfk_2', 'follower', type_='foreignkey')
    op.drop_constraint('follower_ibfk_1', 'follower', type_='foreignkey')
    op.create_foreign_key(None, 'follower', 'user', ['target'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'follower', 'user', ['source'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('image_store_file_ibfk_1', 'image_store_file', type_='foreignkey')
    op.drop_constraint('image_store_file_ibfk_2', 'image_store_file', type_='foreignkey')
    op.drop_constraint('image_store_file_ibfk_3', 'image_store_file', type_='foreignkey')
    op.create_foreign_key(None, 'image_store_file', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'image_store_file', 'file_storage', ['thumbnail_id'], ['uuid'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'image_store_file', 'file_storage', ['file_id'], ['uuid'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('mail_ibfk_1', 'mail', type_='foreignkey')
    op.drop_constraint('mail_ibfk_2', 'mail', type_='foreignkey')
    op.create_foreign_key(None, 'mail', 'user', ['from_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'mail', 'user', ['to_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('permission_pack_user_ibfk_1', 'permission_pack_user', type_='foreignkey')
    op.create_foreign_key(None, 'permission_pack_user', 'permission_pack', ['pack_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('preliminary_contest_ibfk_1', 'preliminary_contest', type_='foreignkey')
    op.create_foreign_key(None, 'preliminary_contest', 'user', ['uploader'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('preliminary_problem_ibfk_1', 'preliminary_problem', type_='foreignkey')
    op.create_foreign_key(None, 'preliminary_problem', 'preliminary_contest', ['contest'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('problem_ibfk_2', 'problem', type_='foreignkey')
    op.drop_constraint('problem_ibfk_1', 'problem', type_='foreignkey')
    op.create_foreign_key(None, 'problem', 'user', ['uploader_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'problem', 'team', ['team_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('problem_set_ibfk_1', 'problem_set', type_='foreignkey')
    op.create_foreign_key(None, 'problem_set', 'user', ['owner_uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('problem_solution_ibfk_1', 'problem_solution', type_='foreignkey')
    op.drop_constraint('problem_solution_ibfk_2', 'problem_solution', type_='foreignkey')
    op.drop_constraint('problem_solution_ibfk_3', 'problem_solution', type_='foreignkey')
    op.create_foreign_key(None, 'problem_solution', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'problem_solution', 'problem', ['problem_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'problem_solution', 'user', ['verifier'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('problem_todo_ibfk_1', 'problem_todo', type_='foreignkey')
    op.drop_constraint('problem_todo_ibfk_2', 'problem_todo', type_='foreignkey')
    op.create_foreign_key(None, 'problem_todo', 'problem', ['problem_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'problem_todo', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('problemtag_ibfk_1', 'problemtag', type_='foreignkey')
    op.drop_constraint('problemtag_ibfk_2', 'problemtag', type_='foreignkey')
    op.create_foreign_key(None, 'problemtag', 'problem', ['problem_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'problemtag', 'tag', ['tag_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('submission_ibfk_5', 'submission', type_='foreignkey')
    op.drop_constraint('submission_ibfk_6', 'submission', type_='foreignkey')
    op.create_foreign_key(None, 'submission', 'virtual_contest', ['virtual_contest_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'submission', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'submission', 'problem', ['problem_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('team_ibfk_1', 'team', type_='foreignkey')
    op.create_foreign_key(None, 'team', 'user', ['owner_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('team_file_ibfk_1', 'team_file', type_='foreignkey')
    op.drop_constraint('team_file_ibfk_2', 'team_file', type_='foreignkey')
    op.drop_constraint('team_file_ibfk_3', 'team_file', type_='foreignkey')
    op.create_foreign_key(None, 'team_file', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'team_file', 'team', ['team_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'team_file', 'file_storage', ['file_id'], ['uuid'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('team_member_ibfk_1', 'team_member', type_='foreignkey')
    op.drop_constraint('team_member_ibfk_2', 'team_member', type_='foreignkey')
    op.create_foreign_key(None, 'team_member', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'team_member', 'team', ['team_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('virtual_contest_ibfk_1', 'virtual_contest', type_='foreignkey')
    op.drop_constraint('virtual_contest_ibfk_2', 'virtual_contest', type_='foreignkey')
    op.create_foreign_key(None, 'virtual_contest', 'user', ['owner_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'virtual_contest', 'contest', ['contest_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('wikipage_version_ibfk_2', 'wikipage_version', type_='foreignkey')
    op.drop_constraint('wikipage_version_ibfk_1', 'wikipage_version', type_='foreignkey')
    op.drop_constraint('wikipage_version_ibfk_3', 'wikipage_version', type_='foreignkey')
    op.create_foreign_key(None, 'wikipage_version', 'wiki_navigation_item', ['navigation_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'wikipage_version', 'user', ['uid'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'wikipage_version', 'wikipage', ['wikipage_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wikipage_version', type_='foreignkey')
    op.drop_constraint(None, 'wikipage_version', type_='foreignkey')
    op.drop_constraint(None, 'wikipage_version', type_='foreignkey')
    op.create_foreign_key('wikipage_version_ibfk_3', 'wikipage_version', 'wiki_navigation_item', ['navigation_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('wikipage_version_ibfk_1', 'wikipage_version', 'wikipage', ['wikipage_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('wikipage_version_ibfk_2', 'wikipage_version', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'virtual_contest', type_='foreignkey')
    op.drop_constraint(None, 'virtual_contest', type_='foreignkey')
    op.create_foreign_key('virtual_contest_ibfk_2', 'virtual_contest', 'contest', ['contest_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('virtual_contest_ibfk_1', 'virtual_contest', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'team_member', type_='foreignkey')
    op.drop_constraint(None, 'team_member', type_='foreignkey')
    op.create_foreign_key('team_member_ibfk_2', 'team_member', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('team_member_ibfk_1', 'team_member', 'team', ['team_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'team_file', type_='foreignkey')
    op.drop_constraint(None, 'team_file', type_='foreignkey')
    op.drop_constraint(None, 'team_file', type_='foreignkey')
    op.create_foreign_key('team_file_ibfk_3', 'team_file', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('team_file_ibfk_2', 'team_file', 'team', ['team_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('team_file_ibfk_1', 'team_file', 'file_storage', ['file_id'], ['uuid'], ondelete='CASCADE')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.create_foreign_key('team_ibfk_1', 'team', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'submission', type_='foreignkey')
    op.drop_constraint(None, 'submission', type_='foreignkey')
    op.drop_constraint(None, 'submission', type_='foreignkey')
    op.create_foreign_key('submission_ibfk_6', 'submission', 'problem', ['problem_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')
    op.create_foreign_key('submission_ibfk_5', 'submission', 'virtual_contest', ['virtual_contest_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'problemtag', type_='foreignkey')
    op.drop_constraint(None, 'problemtag', type_='foreignkey')
    op.create_foreign_key('problemtag_ibfk_2', 'problemtag', 'tag', ['tag_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('problemtag_ibfk_1', 'problemtag', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'problem_todo', type_='foreignkey')
    op.drop_constraint(None, 'problem_todo', type_='foreignkey')
    op.create_foreign_key('problem_todo_ibfk_2', 'problem_todo', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('problem_todo_ibfk_1', 'problem_todo', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'problem_solution', type_='foreignkey')
    op.drop_constraint(None, 'problem_solution', type_='foreignkey')
    op.drop_constraint(None, 'problem_solution', type_='foreignkey')
    op.create_foreign_key('problem_solution_ibfk_3', 'problem_solution', 'user', ['verifier'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('problem_solution_ibfk_2', 'problem_solution', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('problem_solution_ibfk_1', 'problem_solution', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'problem_set', type_='foreignkey')
    op.create_foreign_key('problem_set_ibfk_1', 'problem_set', 'user', ['owner_uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'problem', type_='foreignkey')
    op.drop_constraint(None, 'problem', type_='foreignkey')
    op.create_foreign_key('problem_ibfk_1', 'problem', 'team', ['team_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('problem_ibfk_2', 'problem', 'user', ['uploader_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'preliminary_problem', type_='foreignkey')
    op.create_foreign_key('preliminary_problem_ibfk_1', 'preliminary_problem', 'preliminary_contest', ['contest'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'preliminary_contest', type_='foreignkey')
    op.create_foreign_key('preliminary_contest_ibfk_1', 'preliminary_contest', 'user', ['uploader'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'permission_pack_user', type_='foreignkey')
    op.create_foreign_key('permission_pack_user_ibfk_1', 'permission_pack_user', 'permission_pack', ['pack_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'mail', type_='foreignkey')
    op.drop_constraint(None, 'mail', type_='foreignkey')
    op.create_foreign_key('mail_ibfk_2', 'mail', 'user', ['to_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('mail_ibfk_1', 'mail', 'user', ['from_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'image_store_file', type_='foreignkey')
    op.drop_constraint(None, 'image_store_file', type_='foreignkey')
    op.drop_constraint(None, 'image_store_file', type_='foreignkey')
    op.create_foreign_key('image_store_file_ibfk_3', 'image_store_file', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('image_store_file_ibfk_2', 'image_store_file', 'file_storage', ['thumbnail_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key('image_store_file_ibfk_1', 'image_store_file', 'file_storage', ['file_id'], ['uuid'], ondelete='CASCADE')
    op.drop_constraint(None, 'follower', type_='foreignkey')
    op.drop_constraint(None, 'follower', type_='foreignkey')
    op.create_foreign_key('follower_ibfk_1', 'follower', 'user', ['target'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('follower_ibfk_2', 'follower', 'user', ['source'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'feed', type_='foreignkey')
    op.create_foreign_key('feed_ibfk_1', 'feed', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'discussion', type_='foreignkey')
    op.create_foreign_key('discussion_ibfk_1', 'discussion', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'contest_clarification', type_='foreignkey')
    op.drop_constraint(None, 'contest_clarification', type_='foreignkey')
    op.drop_constraint(None, 'contest_clarification', type_='foreignkey')
    op.create_foreign_key('contest_clarification_ibfk_3', 'contest_clarification', 'user', ['sender'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('contest_clarification_ibfk_2', 'contest_clarification', 'user', ['replier'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('contest_clarification_ibfk_1', 'contest_clarification', 'contest', ['contest'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'contest', type_='foreignkey')
    op.create_foreign_key('contest_ibfk_1', 'contest', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.create_foreign_key('comment_ibfk_2', 'comment', 'discussion', ['discussion_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('comment_ibfk_1', 'comment', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'challenge_record', type_='foreignkey')
    op.drop_constraint(None, 'challenge_record', type_='foreignkey')
    op.drop_constraint(None, 'challenge_record', type_='foreignkey')
    op.create_foreign_key('challenge_record_ibfk_2', 'challenge_record', 'problem_set', ['problemset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('challenge_record_ibfk_3', 'challenge_record', 'user', ['uid'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('challenge_record_ibfk_1', 'challenge_record', 'challenge', ['challenge_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'cached_accepted_problems', type_='foreignkey')
    op.drop_constraint(None, 'cached_accepted_problems', type_='foreignkey')
    op.create_foreign_key('cached_accepted_problems_ibfk_1', 'cached_accepted_problems', 'problem', ['problem_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('cached_accepted_problems_ibfk_2', 'cached_accepted_problems', 'user', ['uid'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
