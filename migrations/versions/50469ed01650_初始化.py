"""初始化

Revision ID: 50469ed01650
Revises: 
Create Date: 2020-08-18 13:36:02.490296

"""
from const_var import SYSTEM_NOTIFICATION_USERID
from alembic import op
import sqlalchemy as sa
import ormtypes
from sqlalchemy.dialects import mysql
import models
from sqlalchemy import orm

# revision identifiers, used by Alembic.
revision = '50469ed01650'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenge',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('level', sa.Integer(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('problemset_list',
                              ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_challenge_level'),
                    'challenge', ['level'], unique=True)
    op.create_table('permission_group',
                    sa.Column('id', sa.String(length=20), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.Column('permissions', ormtypes.json_pickle.JsonPickle(),
                              nullable=False),
                    sa.Column('inherit', sa.String(length=20), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('banned', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('username', sa.String(length=20), nullable=True),
                    sa.Column('password', sa.String(length=64), nullable=True),
                    sa.Column('description', mysql.LONGTEXT(), nullable=True),
                    sa.Column('email', sa.String(length=128), nullable=True),
                    sa.Column('register_time', sa.DateTime(), nullable=False),
                    sa.Column('rating_history',
                              ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('joined_teams', ormtypes.json_pickle.JsonPickle(),
                              nullable=False),
                    sa.Column('rating', sa.Integer(), nullable=False),
                    sa.Column('permission_group', sa.String(
                        length=20), nullable=False),
                    sa.Column('permissions', ormtypes.json_pickle.JsonPickle(),
                              nullable=False),
                    sa.Column('force_logout_before',
                              sa.BigInteger(), nullable=False),
                    sa.Column('phone_number', sa.String(
                        length=20), nullable=True),
                    sa.Column('phone_verified', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('last_auth_code', sa.String(
                        length=10), nullable=True),
                    sa.Column('last_send_time', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_user_phone_number'), 'user',
                    ['phone_number'], unique=False)
    op.create_index(op.f('ix_user_rating'), 'user', ['rating'], unique=False)
    op.create_table('contest',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=False),
                    sa.Column('description', mysql.LONGTEXT(), nullable=False),
                    sa.Column('start_time', sa.DateTime(), nullable=False),
                    sa.Column('end_time', sa.DateTime(), nullable=False),
                    sa.Column(
                        'problems', ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('ranklist_visible', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('judge_result_visible', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('rank_criterion', sa.String(
                        length=20), nullable=False),
                    sa.Column('invite_code', mysql.LONGTEXT, nullable=False),
                    sa.Column('rated', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('rated_time', sa.DateTime(), nullable=True),
                    sa.Column('private_contest', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['owner_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('discussion',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('path', sa.String(length=128), nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=False),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('uid', sa.Integer(), nullable=False),
                    sa.Column('top', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['uid'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_discussion_path'),
                    'discussion', ['path'], unique=False)
    op.create_index(op.f('ix_discussion_title'),
                    'discussion', ['title'], unique=False)
    op.create_table('feed',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('uid', sa.Integer(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('content', mysql.LONGTEXT(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['uid'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('follower',
                    sa.Column('source', sa.Integer(), nullable=False),
                    sa.Column('target', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['source'], ['user.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['target'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('source', 'target')
                    )
    op.create_index(op.f('ix_follower_source'),
                    'follower', ['source'], unique=False)
    op.create_index(op.f('ix_follower_target'),
                    'follower', ['target'], unique=False)
    op.create_table('mail',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('from_id', sa.Integer(), nullable=True),
                    sa.Column('to_id', sa.Integer(), nullable=True),
                    sa.Column('time', sa.DateTime(), nullable=True),
                    sa.Column('text', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['from_id'], ['user.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['to_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_mail_from_id'), 'mail', ['from_id'], unique=False)
    op.create_index(op.f('ix_mail_to_id'), 'mail', ['to_id'], unique=False)
    op.create_table('problem',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('uploader_id', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(length=100), nullable=True),
                    sa.Column('background', mysql.LONGTEXT(), nullable=True),
                    sa.Column('content', mysql.LONGTEXT(), nullable=True),
                    sa.Column('input_format', mysql.LONGTEXT(), nullable=True),
                    sa.Column('output_format',
                              mysql.LONGTEXT(), nullable=True),
                    sa.Column('hint', mysql.LONGTEXT(), nullable=True),
                    sa.Column(
                        'example', ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column(
                        'files', ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column(
                        'downloads', ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column(
                        'provides', ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column(
                        'subtasks', ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column('public', mysql.TINYINT(
                        display_width=1), nullable=True),
                    sa.Column('spj_filename', sa.String(
                        length=20), nullable=True),
                    sa.Column('using_file_io', mysql.TINYINT(
                        display_width=1), nullable=True),
                    sa.Column('input_file_name', sa.String(
                        length=30), nullable=True),
                    sa.Column('output_file_name', sa.String(
                        length=30), nullable=True),
                    sa.Column('problem_type', sa.String(
                        length=20), nullable=True),
                    sa.Column('extra_parameter',
                              ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('can_see_results', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('create_time', sa.DateTime(), nullable=False),
                    sa.Column('remote_judge_oj', sa.String(
                        length=10), nullable=True),
                    sa.Column('remote_problem_id', sa.String(
                        length=20), nullable=True),
                    sa.Column('require_permission', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('cached_submit_count',
                              sa.Integer(), nullable=False),
                    sa.Column('cached_accepted_count',
                              sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['uploader_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_problem_public'),
                    'problem', ['public'], unique=False)
    op.create_table('problem_set',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('owner_uid', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('private', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column('invitation_code',
                              mysql.LONGTEXT, nullable=True),
                    sa.Column('show_ranklist', mysql.TINYINT(
                        display_width=1), nullable=False),
                    sa.Column(
                        'problems', ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('create_time', sa.DateTime(), nullable=False),
                    sa.Column('description', mysql.LONGTEXT(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['owner_uid'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('submission',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('uid', sa.Integer(), nullable=True),
                    sa.Column('language', sa.String(length=20), nullable=True),
                    sa.Column('problem_id', sa.Integer(), nullable=True),
                    sa.Column('submit_time', sa.DateTime(), nullable=True),
                    sa.Column('public', mysql.TINYINT(
                        display_width=1), nullable=True),
                    sa.Column('contest_id', sa.Integer(), nullable=False),
                    sa.Column('code', mysql.LONGTEXT, nullable=True),
                    sa.Column('judge_result',
                              ormtypes.json_pickle.JsonPickle(), nullable=True),
                    sa.Column('score', sa.Integer(), nullable=False),
                    sa.Column('memory_cost', sa.Integer(), nullable=False),
                    sa.Column('time_cost', sa.Integer(), nullable=False),
                    sa.Column('extra_compile_parameter',
                              sa.String(length=128), nullable=False),
                    sa.Column('selected_compile_parameters',
                              ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('status', sa.String(length=20), nullable=True),
                    sa.Column('message', mysql.LONGTEXT(), nullable=True),
                    sa.Column('judger', sa.String(length=20), nullable=True),
                    sa.Column('problemset_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['uid'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_submission_contest_id'),
                    'submission', ['contest_id'], unique=False)
    op.create_index(op.f('ix_submission_problem_id'),
                    'submission', ['problem_id'], unique=False)
    op.create_index(op.f('ix_submission_problemset_id'),
                    'submission', ['problemset_id'], unique=False)
    op.create_index(op.f('ix_submission_score'),
                    'submission', ['score'], unique=False)
    op.create_index(op.f('ix_submission_status'),
                    'submission', ['status'], unique=False)
    op.create_index(op.f('ix_submission_uid'),
                    'submission', ['uid'], unique=False)
    op.create_table('team',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=30), nullable=False),
                    sa.Column('description', mysql.LONGTEXT(), nullable=True),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column(
                        'members', ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column(
                        'admins', ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column(
                        'tasks', ormtypes.json_pickle.JsonPickle(), nullable=False),
                    sa.Column('create_time', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['owner_id'], ['user.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('comment',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('uid', sa.Integer(), nullable=False),
                    sa.Column('time', sa.DateTime(), nullable=False),
                    sa.Column('discussion_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['discussion_id'], ['discussion.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['uid'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_comment_discussion_id'),
                    'comment', ['discussion_id'], unique=False)
    op.create_index(op.f('ix_comment_uid'), 'comment', ['uid'], unique=False)
    # ### end Alembic commands ###
    # 初始化表中数据
    session = orm.Session(bind=op.get_bind())
    import datetime
    session.execute("SET NAMES utf8mb4")
    session.execute(f"""
    INSERT INTO user (banned,username,password,email,register_time,rating_history,joined_teams,rating,permission_group,permissions,force_logout_before,phone_number,phone_verified,last_send_time) 
    VALUES (0,"!System","{"a"*32}","not_available@email.com",now(),"[]","[]",1500,"admin","[]",0,"12312345678",0,now())
    """)
    session.execute("""
    UPDATE user SET id = 0 WHERE username = "!System"
    """)
    db.session.commit()
    # session.add(models.User(
    #     id=SYSTEM_NOTIFICATION_USERID,
    #     banned=False,
    #     email="not_available@email.com",
    #     # joined_teams=[],
    #     password="a"*32,
    #     rating_history=[],
    #     permissions=["permission.manage"],
    #     username="系统通知",
    #     permission_group="admin",
    #     register_time=datetime.datetime.now()
    # ))
    session.add_all([
        models.PermissionGroup(
            id="admin",
            name="管理员",
            permissions=["*"],
            inherit="default"
        ),
        models.PermissionGroup(
            id="default",
            name="普通用户",
            permissions=["challenge.use", "problemset.use.public",
                         "remote_judge.use", "blog.use", "virtualcontest.use"]
        ),

    ])
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comment_uid'), table_name='comment')
    op.drop_index(op.f('ix_comment_discussion_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_table('team')
    op.drop_index(op.f('ix_submission_uid'), table_name='submission')
    op.drop_index(op.f('ix_submission_status'), table_name='submission')
    op.drop_index(op.f('ix_submission_score'), table_name='submission')
    op.drop_index(op.f('ix_submission_problemset_id'), table_name='submission')
    op.drop_index(op.f('ix_submission_problem_id'), table_name='submission')
    op.drop_index(op.f('ix_submission_contest_id'), table_name='submission')
    op.drop_table('submission')
    op.drop_table('problem_set')
    op.drop_index(op.f('ix_problem_public'), table_name='problem')
    op.drop_table('problem')
    op.drop_index(op.f('ix_mail_to_id'), table_name='mail')
    op.drop_index(op.f('ix_mail_from_id'), table_name='mail')
    op.drop_table('mail')
    op.drop_index(op.f('ix_follower_target'), table_name='follower')
    op.drop_index(op.f('ix_follower_source'), table_name='follower')
    op.drop_table('follower')
    op.drop_table('feed')
    op.drop_index(op.f('ix_discussion_title'), table_name='discussion')
    op.drop_index(op.f('ix_discussion_path'), table_name='discussion')
    op.drop_table('discussion')
    op.drop_table('contest')
    op.drop_index(op.f('ix_user_rating'), table_name='user')
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_table('user')
    op.drop_table('permission_group')
    op.drop_index(op.f('ix_challenge_level'), table_name='challenge')
    op.drop_table('challenge')
    # ### end Alembic commands ###
